# (C) Copyright IBM Deutschland GmbH 2021, 2024
# (C) Copyright IBM Corp. 2021, 2024
#
# non-exclusively licensed to gematik GmbH

########################################################################################################################

# variable containing the prefix of the directory where source
# files generated by `asn1c` reside; the directory name is this prefix
# prepended to the target name of the target for which the ASN1 support was required
#
set(GENERATED_ASN1_SOURCES_DIRECTORY_PREFIX "asn1_")

# list of `asn1c` skeleton support source files that
# we DO NOT want to build; everything else is built by default
#
set(DISCARDED_ASN1_SUPPORT_SOURCES converter-example.c
                                   ANY.c
                                   GeneralizedTime.c
                                   NativeReal.c
                                   REAL.c
                                   RELATIVE-OID.c
                                   UTCTime.c
                                   BMPString.c
                                   constr_SET.c
                                   converter-example.c
                                   ENUMERATED.c
                                   GeneralString.c
                                   GraphicString.c
                                   ISO646String.c
                                   NULL.c
                                   NumericString.c
                                   ObjectDescriptor.c
                                   per_opentpye.c
                                   PrintableString.c
                                   T61String.c
                                   TeletexString.c
                                   UniversalString.c
                                   UTF8String.c
                                   VideotexString.c
                                   VisibleString.c)

########################################################################################################################

# private function that defines a new target made of object files
# compiled from source files that are generated from ASN1 files
#
function (_private_configure_asn1_target TARGET_NAME SOURCE_FILES)
    configure_target(${TARGET_NAME} OBJECT_LIBRARY "${SOURCE_FILES}")

    # disable static code analysis for generated files
    #
    set_target_properties(${TARGET_NAME} PROPERTIES C_CLANG_TIDY "")

    # do not issue warnings for generated files
    #
    if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
        target_compile_options(${TARGET_NAME} PRIVATE -w)
    elseif (CMAKE_SYSTEM_NAME STREQUAL "Windows")
        get_target_property(COMPILE_OPTIONS ${TARGET_NAME} COMPILE_OPTIONS)

        list(REMOVE_ITEM COMPILE_OPTIONS "/W1")
        list(REMOVE_ITEM COMPILE_OPTIONS "/W2")
        list(REMOVE_ITEM COMPILE_OPTIONS "/W3")
        list(REMOVE_ITEM COMPILE_OPTIONS "/W4")
        list(REMOVE_ITEM COMPILE_OPTIONS "/Wall")
        list(APPEND COMPILE_OPTIONS "/W0")

        set_target_properties(${TARGET_NAME} PROPERTIES COMPILE_OPTIONS "${COMPILE_OPTIONS}")
    endif()
endfunction()

########################################################################################################################

# function that given a target name (of an already configured target)
# and a list of ASN1 files, it generates the corresponding source files,
# compiles them and adds them to the target's sources
#
function (add_asn1_support TARGET_NAME ASN1_FILES)
    _private_check_target_exists(${TARGET_NAME})

    _private_check_target_source_files(${TARGET_NAME} "${ASN1_FILES}")

    set(GENERATED_SOURCES_DIRECTORY "${GENERATED_ASN1_SOURCES_DIRECTORY_PREFIX}${TARGET_NAME}")

    set(GENERATED_SOURCES_DIRECTORY_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${GENERATED_SOURCES_DIRECTORY})

    file(MAKE_DIRECTORY ${GENERATED_SOURCES_DIRECTORY_PATH})

    set(ASN1C_COMPILER ${CONAN_BIN_DIRS_ASN1C}/asn1c)

    execute_process(COMMAND ${ASN1C_COMPILER}
                            -R
                            -D ${GENERATED_SOURCES_DIRECTORY_PATH}
                            ${ASN1_FILES}
                    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                    RESULT_VARIABLE RESULT)

    if (NOT RESULT STREQUAL "0")
        message(FATAL_ERROR "Unable to invoke the `asn1c` compiler '${ASN1C_COMPILER}'. See errors above.")
    endif()

    AUX_SOURCE_DIRECTORY(${GENERATED_SOURCES_DIRECTORY_PATH} GENERATED_ASN1_SOURCES)

    list(TRANSFORM DISCARDED_ASN1_SUPPORT_SOURCES PREPEND ${CONAN_ASN1C_ROOT}/share/asn1c/)
    AUX_SOURCE_DIRECTORY(${CONAN_ASN1C_ROOT}/share/asn1c ASN1_SUPPORT_SOURCES)
    foreach (DISCARDED_SOURCE ${DISCARDED_ASN1_SUPPORT_SOURCES})
        list(REMOVE_ITEM ASN1_SUPPORT_SOURCES ${DISCARDED_SOURCE})
    endforeach()

    set(LIBRARY_NAME ${GENERATED_SOURCES_DIRECTORY})

    _private_configure_asn1_target(${LIBRARY_NAME} "${GENERATED_ASN1_SOURCES};${ASN1_SUPPORT_SOURCES}")

    target_sources(${TARGET_NAME} PRIVATE $<TARGET_OBJECTS:${LIBRARY_NAME}>)
endfunction()

########################################################################################################################
